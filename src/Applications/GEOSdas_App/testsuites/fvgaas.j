#!/bin/csh -fx
######################################################
######################################################
###### THIS IS HERE TO SERVE AS AN EXAMPLE ###########
######################################################
### THIS HAS NOT BEEN INCLUDED AS AN AUTO OPTION  ####
### IN THE DAS; BUT IT IS EASY FOR USERS TO ADAPT ####
### THIS TO THEIR OWN NEED.                       ####
######################################################
# ------------------------------
#SBATCH --account=g0613
###SBATCH --export=NONE
#SBATCH --qos=dastest
#SBATCH --partition=preops
#
#SBATCH --job-name=fvgaas
#SBATCH --output=fvgaas.log.o%j.txt
#SBATCH --ntasks=16
#SBATCH --ntasks-per-node=16
#SBATCH --constraint=sky
#SBATCH --time=9:00:00
# ------------------------------
#
# fvDAS driver script.
#
# This file has been automatically generated by fvsetup.
#
# fvDAS v5.27.1 setup on Thu Jul 20 09:29:25 EDT 2023 by rtodling.
#--------------------------------------------------------------------
 set myname = `basename $0`
 cd # in latest SLURM env job also starts from where submitted
    # it needs to be at home to be able to properly resolve which commands

# Source Run Time Environment settings
# ------------------------------------
  setenv FVHOME  /discover/nobackup/projects/gmao/dadev/rtodling/RECOVER/x0048  # experiment home directory
  if (-e $FVHOME/run/FVDAS_Run_Config) source $FVHOME/run/FVDAS_Run_Config

#
#                 ----------------------------------
#                  PART I - Prepare the Environment
#                 ----------------------------------

# Experiment environment
# ----------------------
  setenv GID g0613
  setenv group_list "SBATCH --account=$GID"
  setenv ARCH `uname -s`
  setenv HOST `uname -n`
  setenv NCPUS       864       # Number of CPUs to run GCM
  setenv NCPUSX      864      # Number of CPUs plus IO-server requirement
  setenv NCPUS_IDF   96   # Number of CPUs to run IDF
  setenv NCPUS_IAU   96   # Number of CPUs to run IAU
  setenv NCPUS_GSI   672   # Number of CPUs to run GSI
  setenv NCPUS_GPERT 216 # Number of CPUs to run gcmPERT
  setenv NCPUS_AOD   1   # Number of CPUs to run PSAS-AOD
  setenv O_SERVERS   0   # Number of IO servers
  setenv O_WRITERS_PER_NODE 0 # Number of backend writers
  #setenv GAAS_RUN_SLURM 1 # launch AOD analysis as separate batch job
  setenv AODBLOCKJOB 1
  setenv NCPUS_PER_NODE 36
  setenv NODES      sky
  setenv N_CPU   $NCPUS
  setenv EXPID   x0048   # experiment ID
  setenv CASE    $EXPID  # experiment ID (for LSM's sake)
  setenv FVROOT  /discover/nobackup/projects/gmao/advda/rtodling/4OPS/g530x/GEOSadas/install  # fvDAS installation root dir
  setenv FVRUN   $FVHOME/run
  if(`uname -s` == "OSF1" ) then
     cd $TMPDIR_UBC
     setenv FVWORK  `pwd`           # temporary fix while TMPDIR not avail on Halem
     setenv FVWORK  $FVWORK/fvwork.$$  # temporary fix while TMPDIR not avail on Halem
  endif
  if(`uname -s` == "IRIX64" ) then
     if(`uname -n` == "sunrise" ) then
        setenv FVWORK  $TMPDIR/fvwork.$$   # working directory
     else
        setenv FVWORK  $SCRATCH1/fvwork.$$ # working directory
     endif
  endif
  if( (`uname -s` == "Linux") ) then
      if( `uname -m` != "ia64" ) then
          setenv FORT90L -Wl,-T
      endif
      setenv FVWORK /discover/nobackup/projects/gmao/dadev/rtodling/RECOVER/fvwork.$$
      if ($?kidwork) then # this case, overwrite FVWORK with user-specific
         setenv FVWORK $kidwork
      endif
  endif
  /bin/mkdir -p $FVWORK             # create working directory
  echo $FVWORK >! $FVHOME/.FVWORK  # record working directory

  setenv FVBCS $FVHOME/fvInput
  setenv EXTDATA $FVWORK/ExtData  # External data directory
  /bin/mkdir -p $EXTDATA
  /bin/touch $EXTDATA/.no_archiving
  /bin/rm -f $EXTDATA/agcmpert
  /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/agcmpert $EXTDATA/
  /bin/rm -f $EXTDATA/chemistry
  /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/chemistry $EXTDATA/
  /bin/rm -f $EXTDATA/g5chem
  /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/g5chem $EXTDATA/
  /bin/rm -f $EXTDATA/g5gcm
  /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/g5gcm $EXTDATA/
  /bin/rm -f $EXTDATA/PIESA
  /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/PIESA $EXTDATA/
  /bin/rm -f $EXTDATA/MERRA2
  /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/MERRA2 $EXTDATA/
  /bin/rm -f $EXTDATA/AeroCom
  /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/AeroCom $EXTDATA/

# Load BASEDIR and modules
# ------------------------
  unsetenv LD_LIBRARY_PATH
  source $FVROOT/bin/g5_modules
  setenv LD_LIBRARY_PATH ${BASEDIR}/${ARCH}/lib:${FVROOT}/lib:${LD_LIBRARY_PATH}

# Internal parameters controlling system behavior
# ----------------------------------------------
  setenv BATCH_SUBCMD sbatch
  setenv G5GCM   1   # 1 = enables GEOS-5 GCM, 0 = disables GEOS-5 GCM (back to fvGCM)
  setenv FCHOME  $FVHOME/fcst
  setenv FVSBC   0   # 1 = enables SBC, 0 = disables SBC (Bias Correction)
  setenv FVCQC   0   # 1 = enables CQC, 0 = disables CQC
  setenv PREPQC  0  # 1 = enables NCEP-QC, 0 = disables QC
  setenv OIQC    0    # 1 = enables OIQC, 0 = disables OIQC
  setenv RADCOR  NONE  # (see ssprepqc usage for valid values)
  setenv DAOTOVS 0 # 1 = enables DAOTOVS, 0 = disables DAOTOVS
  setenv NOSFCANA 1  # 1 = enables sfc-analysis, 0 = disables it
  setenv TIMEINC 360
  setenv ASYNBKG 180  # 1 = enables ASYNOPTIC BCKG mode, 0 = disables it
  setenv VTRKFRQA 180    # frequency of input vtx files for storm relocation
  setenv VTRKFRQF 360    # frequency of input vtx files for storm tracking
  setenv VAROFFSET 180   # abs value of time off from 1st synoptic hour of var window
  setenv DO4DVAROBSVR 0 # trigger for split observer
  setenv DO4DVAR  0    # 1=enables 4dvar
  setenv DO4DTLM  0    # 1=enables tlm integration after each 4dvar iteration
  setenv DO4DIAU  1       # 1=enables gcm to take time changing IAU forcing
  setenv DORCORR  1    # 1=enables correlated obs errors
  setenv WCONSTRAINT 0 # set/unset weak constraint option
  setenv NVAROUTER 1 # number of iteration for var loop
  setenv SSMI_UV 0        # 1 = enables SSMI WIND SPEED, 0 = disables it
  setenv SPLITEXE 1  # 1 = enables SPLIT EXECUTABLE run, 0 = disables it
  setenv VTXLEVS "1000 925 850 700 600 500 400 300 250 200 150 100 70 50 30 20 10"
  setenv DIAG2ODS 1        # 1 = enables conversion of gsi-diag files to ODS, 0 = disables it
  setenv CONVSFC  1 # 1 = enables call to lcv2prs for conversion of surface output fields
  setenv CONVUPA  1 # 1 = enables call to lcv2prs for conversion of upper-air output fields
  setenv DOIAU    1   # 0 = disable IAU; otherwise offset should be 030000
  setenv SAVE4ASENS 1  # 1 = will not store intermediate files for later analysis sensitivity run
  setenv MONTHLY_MEANS 0   # 1 = submit monthly means at end of month;     0 = don't
  setenv MONTHLY_TAR 0   # 1 = submit monthly tar job at end of month;   0 = don't
  setenv MONTHLY_PLOTS 0   # 1 = submit monthly plots job at end of month; 0 = don't
  setenv MONTHLY_RADMON 0 # 1 = submit monthly radmon job; 2 = 2 jobs/month; 3 = 3 jobs/month; 0 = don't
  setenv NCSUFFIX nc4
  setenv STAGE4FSENS /dev/null
  setenv GAAS_ANA 1 # 1 = aerosol analysis, 0 = disables it
  setenv GAASFDBK 1 # 1 = feedback aerosol analysis into GCM, 0 = don't
  setenv SKIP_PSAS 0 #  sets do_you_want_to_skip_PSAS in ana.rc.tmpl; 0 = no, 1 = yes
  setenv LDAS_ANA 0 # 1 = land analysis, 0 = disables it 
  setenv LDASFDBK 0 # 1 = read land analysis incr into GCM (feedback), 0 = don't 
  setenv LDHOME  NULL  # land analysis home dir (ldas_exp/) for central 
  setenv LDHOME4ENS NULL  # land analysis home dir for atm_ens  
  setenv IGNORE_0 1   # 1 = ignore 0 length obs files in acquire
  setenv FCSTIMES "15 21"
  setenv FCSTATS  "21"
  setenv FHOURS   123
  setenv GSI_NETCDF_DIAG 1
  setenv GSI_DIAG2TXT 1
# setenv DO_0HR_IMP 1

  setenv LOCAL_ACQUIRE 1
  setenv CHECK_DMF 0
  setenv VTXRELOC 0
  setenv VTRACK   0
  setenv ANA4DUPD_IAU0_ONLY 0
  setenv HYBRIDGSI     /dev/null
  setenv STAGE4HYBGSI  /dev/null
  setenv RSTSTAGE4AENS /dev/null
  setenv NSEGS 1
  setenv NSTEP 1
#  setenv DO_DMGET 1
#  setenv CHECK_DMF 1
#  setenv DMGET_CMD /usr/bin/dmget

  setenv STAGE4FCST /dev/null
  setenv ANASTAGE   $FVHOME/fcst/stage

# SSI/GSI specifics
# -----------------
  setenv SPECRES    254
  setenv SPECVTX    $SPECRES
  setenv LEVSVTX     64        # this is the wired-in number of levels when tracking reloc used

# MPI/OMP specific environment variables
# --------------------------------------
  setenv NUMBER_CPUS_IN_MACHINE      $NCPUS    # Total No CPU on this queue
  setenv OMP_NUM_THREADS             $NCPUS    # Number OMP Threads (generic)
  setenv OMP_SET_NUMTHREADS          1         # allows dynamic change of #threads
  setenv PSAS_NUM_MPI                1 # 54      # No. MPI processes for PSAS
  setenv PSAS_NUM_THREADS            1 # 16      # No. OMP threads   for PSAS
  setenv AGCM_N_PROCESSES            54      # N_PROC X N_THREADS = NCPUS
  setenv AGCM_N_THREADS_PER_PROCESS  16
  setenv AGCM_NUM_MPI                $AGCM_N_PROCESSES           # No. MPI processes for GCM
  setenv AGCM_NUM_THREADS            $AGCM_N_THREADS_PER_PROCESS # No. OMP threads   for GCM
  setenv OMP_NUM_THREADS             $AGCM_N_THREADS_PER_PROCESS # Number OMP Threads (generic)


  setenv MKL_CBWR SSE4_2

# MVAPICH variables
# -----------------
  if ($?MVAPICH) then
     setenv MV2_DEFAULT_TIME_OUT 23
     setenv MV2_USE_SHMEM_ALLREDUCE 0
     setenv MV2_ON_DEMAND_THRESHOLD 8192
     setenv MV2_USE_UD_HYBRID 0
     setenv MV2_USE_SHMEM_COLL      0
     setenv MV2_USE_UD_HYBRID       0
     setenv MV2_HYBRID_MAX_RC_CONN 16
     setenv MV2_SHOW_ENV_INFO 2
  endif

# The following are from OPS parallel

  if ($?I_MPI_ROOT) then
#    The following as recommended by Scott and SI Team
#    setenv I_MPI_USE_DYNAMIC_CONNECTIONS 0
     setenv I_MPI_SHM_HEAP_VSIZE   512
     setenv PSM2_MEMORY            large
     setenv I_MPI_ADJUST_GATHERV   3
     setenv I_MPI_ADJUST_ALLREDUCE 12
     setenv I_MPI_EXTRA_FILESYSTEM 1
     setenv I_MPI_EXTRA_FILESYSTEM_LIST gpfs
     setenv I_MPI_DEBUG 6
#    setenv ROMIO_FSTYPE_FORCE         "gpfs:"
#    setenv I_MPI_FABRICS shm:ofi
#    setenv I_MPI_FABRICS shm:dapl
#    setenv I_MPI_FABRICS_LIST "dapl,ofa"
#    setenv I_MPI_FALLBACK "enable"
#    setenv I_MPI_MPD_RSH sshmpi
#    setenv I_MPI_DAPL_CHECK_MAX_RDMA_SIZE 1
#    setenv I_MPI_DAPL_UD_SEND_BUFFER_NUM 4096
#    setenv I_MPI_DAPL_UD_RECV_BUFFER_NUM 4096
#    setenv I_MPI_DAPL_UD_ACK_SEND_POOL_SIZE 4096
#    setenv I_MPI_DAPL_UD_ACK_RECV_POOL_SIZE 4096
#    setenv I_MPI_DAPL_UD_RNDV_EP_NUM 2
#    setenv I_MPI_DAPL_UD_REQ_EVD_SIZE 2000
  endif
  if ($?MPT_VERSION) then
     setenv DAPL_UCM_CQ_SIZE 4096
     setenv DAPL_UCM_QP_SIZE 4096
     setenv DAPL_UCM_REP_TIME 2000
     setenv DAPL_UCM_RTU_TIME 2000
     setenv DAPL_UCM_RETRY 7
     setenv DAPL_ACK_RETRY 7
     setenv DAPL_ACK_TIMER 20
     setenv DAPL_UCM_RETRY 10
     setenv DAPL_ACK_RETRY 10
# MPT env variables
# -----------------
     setenv MPI_COLL_REPRODUCIBLE
     setenv MPI_DISPLAY_SETTINGS
     setenv MPI_COMM_MAX  1024
     setenv MPI_GROUP_MAX 1024
     setenv MPI_BUFS_PER_PROC 1024
     setenv MPI_IB_TIMEOUT 23
     setenv MPI_XPMEM_ENABLE no
     setenv MPI_NUM_MEMORY_REGIONS 0
     setenv SUPRESS_XPMEM_TRIM_THRESH 1
  endif 
  setenv SLURM_DISTRIBUTION block

# For some reason, PMI_RANK is randomly set and interferes
# with binarytile.x and other executables.
  unsetenv PMI_RANK

# Needed for TLM/ADM
# ------------------
  setenv N_SMP                        $NCPUS   # number of CPUS
  setenv N_MPI                        $NCPUS   # number of MPI processes
  setenv NUMBER_MLP_PROCESSES         ${N_MPI} # still used by GCM
  setenv NUMBER_CPUS_PER_MLP_PROCESS  ${N_SMP} # still used by GCM

  setenv JEDIDIR
  if ( -d $FVHOME/run/jedi ) setenv JEDIDIR $FVHOME/run/jedi

# Add FVROOT/bin to front of path so fvDAS binaries are found first
# -----------------------------------------------------------------
  if ( `uname -s` == "Linux" ) then
    set path = ( . $FVHOME/run $JEDIDIR $FVROOT/bin $SHARE/dasilva/opengrads/Contents $BASEDIR/$ARCH/bin $path )
  else
    set path = ( . $FVHOME/run $JEDIDIR $FVROOT/bin $SHARE/dasilva/opengrads/Contents $path )
  endif

# MPI/OpenMP Hybrid Options
# -------------------------
  cd $FVWORK
  set GCMX    = `which GEOSgcm.x`
  set GCMPTX  = `which GEOSgcmPert.x`
  set IDFX    = `which idfupd.x`
  set IAUX    = `which mkiau.x`
  set RSTUPDX = `which rstupd.x`
  set ANAX    = `which GSIsa.x`
  set SACX    = `which sac.x`
  set HDF2RSX = `which hdf2rs.x`

  setenv OMP_NUM_THREADS 1
  setenv MPIRUN_IDF    "PBS_NODEFILE=$FVWORK/IDF_list; esma_mpirun -np $NCPUS_IDF $IDFX"
#-setenv MPIRUN_IAU    "PBS_NODEFILE=$FVWORK/IAU_list; esma_mpirun -np $NCPUS_IAU $IAUX"
  setenv MPIRUN_IAU    "esma_mpirun -np $NCPUS_IAU $IAUX"
#-setenv MPIRUN_UPRST  "esma_mpirun -np $NCPUS_IAU $RSTUPDX"
  setenv MPIRUN_ANA    "PBS_NODEFILE=$FVWORK/ANA_list; esma_mpirun -perhost 8 -np $NCPUS_GSI $ANAX"
  setenv MPIRUN_OBSVR  "esma_mpirun -np $NCPUS_GSI $ANAX"
  setenv MPIRUN_SAC    "esma_mpirun -np  1      $SACX"
  setenv MPIRUN_OIQC   "PBS_NODEFILE=$FVWORK/OIQC_list; esma_mpirun -np 4"
  if ($?MPT_VERSION) then
    setenv MPIRUN_AOD    "mpirun -np $NCPUS_AOD"
    setenv MPIRUN_PSAS   "mpiexec_mpt -np $NCPUS_AOD"
  else
#   setenv MPIRUN_AOD    "esma_mpirun -np $NCPUS_AOD"
#   setenv MPIRUN_PSAS   "esma_mpirun -np $NCPUS_AOD"
    setenv MPIRUN_AOD    ""
    setenv MPIRUN_PSAS   ""
  endif
  setenv RUN_OPT_BLEND "esma_mpirun -np $NCPUS $HDF2RSX"
  if ($G5GCM ) then
     if ( $O_SERVERS > 0 ) then
        setenv RUN_OPT_BEGIN "mpirun -np $NCPUSX $GCMX --npes_model $NCPUS --nodes_output_server $O_SERVERS --oserver_type multigroup --npes_backend_pernode $O_WRITERS_PER_NODE"
     else
        setenv RUN_OPT_BEGIN "esma_mpirun -np $NCPUS $GCMX"
     endif
     setenv ADMRUN_OPT_BEGIN "esma_mpirun -np $NCPUS_GPERT $GCMPTX"
  else
     setenv    RUN_OPT_BEGIN "esma_mpirun -np $AGCM_NUM_MPI $GCMX"
     setenv ADMRUN_OPT_BEGIN "esma_mpirun -np $AGCM_NUM_MPI $GCMPTX"
  endif

# Make sure files are accessible
# ------------------------------
  umask 022


# Discover specific configuration
# ----------------------------
  limit stacksize unlimited
  limit coredumpsize 0
  setenv KMP_STACKSIZE    450m
  unsetenv F_UFMTENDIAN
  setenv KMP_LIBRARY turnaround

    setenv NCEPINPUT $FVBCS

# Run fvDAS for Several (1-day) Run Segments
# ------------------------------------------
set nsegs = 16       # number of fvDAS run segments per PBS job
set nymd = 20220628
set nhms = 210000
set seg = 0
while ( $seg < $nsegs )

#    Start by cleaning working directory
#    -----------------------------------
     /bin/rm -rf   $FVWORK
     /bin/mkdir -p $FVWORK
     if (-e /usr/bin/lfs) then
        /usr/bin/lfs setstripe -c 1 -s 1048576 -i -1 $FVWORK
     endif
     /bin/mkdir -p $EXTDATA
     /bin/touch $EXTDATA/.no_archiving
     /bin/rm -f $EXTDATA/agcmpert
     /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/agcmpert $EXTDATA/
     /bin/rm -f $EXTDATA/chemistry
     /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/chemistry $EXTDATA/
     /bin/rm -f $EXTDATA/g5chem
     /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/g5chem $EXTDATA/
     /bin/rm -f $EXTDATA/g5gcm
     /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/g5gcm $EXTDATA/
     /bin/rm -f $EXTDATA/PIESA
     /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/PIESA $EXTDATA/
     /bin/rm -f $EXTDATA/MERRA2
     /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/MERRA2 $EXTDATA/
     /bin/rm -f $EXTDATA/AeroCom
     /bin/ln -s /discover/nobackup/projects/gmao/share/gmao_ops/fvInput_4dvar/AeroCom $EXTDATA/

     cd $FVWORK
     if (`uname -n` =~ borg*) then
        cat $PBS_NODEFILE | head -1    > $FVWORK/OIQC_list
        cat $PBS_NODEFILE | tail -n +2 > $FVWORK/GCM_list
        cat $PBS_NODEFILE              > $FVWORK/ANA_list
        subset_nodefile.pl $NCPUS_IDF -f $PBS_NODEFILE -o $FVWORK/IDF_list
        subset_nodefile.pl $NCPUS_IAU -f $PBS_NODEFILE -o $FVWORK/IAU_list
     endif

#    Set relevant dates
#    ------------------
     mkdrstdate.x $nymd $nhms
     set rsdate = `rst_date d_rst`
     set nymd = $rsdate[1]
     set nhms = $rsdate[2]
     set yyyy = `echo $nymd | cut -c1-4`
     set mm   = `echo $nymd | cut -c5-6`
     set hh   = `echo $nhms | cut -c1-2`

     @ bkgfreqsc = $ASYNBKG * 60
     foreach this ( 0 $bkgfreqsc )
        @ tgap = $this + $bkgfreqsc
        set gdate = (`tick $nymd $nhms $tgap`)
        set gnymd = $gdate[1]
        set gnhms = $gdate[2]
        set gyyyy = `echo $gnymd | cut -c1-4`
        set gmm   = `echo $gnymd | cut -c5-6`
        set ghh   = `echo $gnhms | cut -c1-2`

#       Bring backgrounds over (To-be-done)
#       ----------------------
        cp /discover/nobackup/projects/gmao/dadev/dao_it/archive/x0048/ana/Y$gyyyy/M$gmm/x0048.gaas_bkg.sfc.${gnymd}_${ghh}z.nc4 .
        if ( ! -e x0048.gaas_bkg.sfc.${gnymd}_${ghh}z.nc4 ) then
           echo "missing gaas_bkg at date/time ${gnymd}_${ghh}, aborting ..."
           exit (1)
        endif
     end

#
#                 ----------------------------------------
#                  PART II - Run fvDAS for 1 Run Segment
#                 ---------------------------------------

# Pick oldest restart for initial condition
# -----------------------------------------
  set itime = ${nymd}_${hh}z
  if ($seg == 0) set itime0 = $itime

  fvgaas -strict -dtg $itime -obsclass $OBSCLASS $FVHOME $FVWORK

  set rc = $status
  if ( $rc == 100 ) then
       echo $myname": simulation already completed, no further job segments"
       exit 0
  endif

  if ( $rc > 0 && $rc < 100 ) then
       mv $FVWORK $FVHOME/morgue  # save runtime environment
       touch $FVHOME/morgue/.no_archiving
       echo $myname": abnormal error condition from fvgaas..."
       echo $myname": runtime environment saved under $FVHOME/morgue"
       exit 1
  endif

# Retrieve advanced date and proceed
# ----------------------------------
  set newdate = `rst_date d_rst`
  set nymd = $newdate[1]
  set nhms = $newdate[2]

#
#
#                 ----------------------------------------
#                      PART III - Data Archival
#                 ---------------------------------------

                           cd $FVHOME/run

                                      zeit_ci.x pesto

# Move files to FVHOME for recycling, archiving and/or post-processing
# ---------------------------------------------------------
  @ pesto_status = 0
# - stage ana eta file
  if ( $ANASTAGE != "/dev/null" && -e stageana.arc ) then
      setenv PESTOROOT $ANASTAGE
      pesto -v -d $FVWORK -arc stageana.arc
      @ pesto_status = $status
  endif

# Move files to FVHOME for archiving and/or post-processing
# ---------------------------------------------------------
  ls -altuF $FVWORK
  setenv PESTOROOT `dirname $FVHOME`
  pesto -v -l -clean -d $FVWORK -arc silo.arc
      @ pesto_status = $status + $pesto_status

                                      zeit_co.x pesto

# Halt if pesto fails
# -------------------
  if ( $pesto_status ) then
      echo " Serious trouble: pesto failed"
      exit 100
  endif


# Mass storage archival as an 1 CPU batch job
# -------------------------------------------
  set jname  = arch.${itime0}
  set lname  = $FVHOME/run/arch.log.${itime0}.o%j.txt

  set yyyymm = `echo $rsdate[1] | cut -c1-6`
  set dd     = `echo $rsdate[1] | cut -c7-8`

  if ( `uname -s` == "OSF1" ) then
      bsub -J $jname < $FVHOME/run/fvarchive.j
  else

#     archive job will wait for qsub'd aerosol analysis jobs to complete
#     ------------------------------------------------------------------
#     NOTE: This is no longer necessary, since fvgaas now waits for the
#           aodJobs to complete. It doesn't do anything, good or bad. I
#           will remove it when I have more time to test.  JCS 04Apr2016
#     ------------------------------------------------------------------
      set dependflag = ""
      if ($?aodJobIDs) then
          set aodJobIDs = `$FVROOT/bin/jobIDfilter -s $aodJobIDs`
          if ("$aodJobIDs" != "") then
             set dependflag = "-W depend=afterany:$aodJobIDs"
          endif
      endif
#     ------------------------------------------------------------------

#     submit archive job
#     ------------------
#     set yyyymm = `echo $rsdate[1] | cut -c1-6`
#     set dd     = `echo $rsdate[1] | cut -c7-8`
#     set vars = "arch_type=ADAS,yyyymm=$yyyymm,dd=$dd"
#     if ( $BATCH_SUBCMD == "sbatch" ) then
#        set cmd = "sbatch -J $jname -o $lname $dependflag --export=$vars $FVHOME/run/fvarchive.j"
#     else
#        set cmd = "qsub -N $jname -o $lname $dependflag -v $vars $FVHOME/run/fvarchive.j"
#     endif
#     set jobIDline = `$cmd`
#     set jobID = $jobIDline[$#jobIDline]
  endif

# Remove the working directory
# ----------------------------
# /bin/rm -rf $FVWORK

# If simulation is done, stop here
# --------------------------------
 if ( $rc == 101 ) then
   echo $myname": simulation just completed, no further job segments"

   set lname = $FVHOME/run/fvgaas.log.${itime0}.txt
   qalter -o $lname $SLURM_JOBID

   exit 0
 endif
 
 @ seg++


end # while: loop over fvDAS run segments


#
#
#                  ----------------------------------
#                    PART IV - Next PBS Job Segment
#                  ----------------------------------

                          cd $FVHOME/run

# Resubmits itself
# ----------------
  set itime1 = ${rsdate[1]}_`echo $rsdate[2] | cut -c1-2`z
  set jname = fvgaas.${itime1}
  set lname = fvgaas.log.${itime1}.o%j.txt
  if ( $BATCH_SUBCMD == "sbatch" ) then
     sbatch -d afterany:${SLURM_JOBID} -J $jname -o $lname $FVHOME/run/fvgaas.j
  else
     qsub -W depend=afterany:${PBS_JOBID} -N $jname -o $lname $FVHOME/run/fvgaas.j
  endif

# Rename output log
# -----------------
  set lname = $FVHOME/run/fvgaas.log.${itime0}.txt
  qalter -o $lname $SLURM_JOBID

# All done
# --------
  exit 0

