# This config file contains the compile options for compilation
# of the EnKF code on the NOAA HPCS.

# ----------------------------------
# Redefine variables for NOAA HPCS
# ----------------------------------
#COREINC  = /contrib/nceplibs/nwprod/lib/incmod
#CORELIB  = /contrib/nceplibs/nwprod/lib
#SHTNSLIB = /contrib/pythonextras/Anaconda-1.8.0/lib
COREINC  = /misc/whome/Michael.Lueken/nceplibs/incmod
CORELIB  = /misc/whome/Michael.Lueken/nceplibs/lib
SHTNSLIB = /pan2/projects/gfsenkf/whitaker/lib/
INCsfcio = $(COREINC)/sfcio_4
INCsigio = $(COREINC)/sigio_4
INCnetcdf = ${NETCDF}/include
INCnemsio = $(COREINC)/nemsio
 
#WRFPATH = /contrib/nceplibs_ext/WRF/WRFV3
WRFPATH = /misc/whome/Mingjing.Tong/WRFV3
LIBwrfio_int    = $(WRFPATH)/external/io_int/libwrfio_int.a
LIBwrfio_netcdf = $(WRFPATH)/external/io_netcdf/libwrfio_nf.a
OBJwrf_frame_pk = $(WRFPATH)/frame/pack_utils.o
OBJwrf_sizeof_int = $(WRFPATH)/frame/module_machine.o
WRFLIB = $(LIBwrfio_int) $(LIBwrfio_netcdf) $(OBJwrf_frame_pk) $(OBJwrf_sizeof_int)
GSILIBS   = -L$(CORELIB) -lw3emc_d -lbufr_d_64 -lCRTM $(WRFLIB)
LIBnetcdf = -L$(NETCDF)/lib -lnetcdf

# Empty out definition of libs use by GMAO EnKF building structure
LIBtransf = #-L$(CORELIB) -ltransf
LIBhermes = #-L$(CORELIB) -lhermes
LIBgfio   = #-L$(CORELIB) -lgfio
INChdf    = #-I$(BASEDIR)/$(ARCH)/include/hdf
LIBhdf    = #-L$(BASEDIR)/$(ARCH)/lib  -lmfhdf -ldf -lhdfjpeg -lhdfz -lsz

# ---------------------------
# General targets/definitions
# ---------------------------

  AR     = ar -v

# ----------------------------
# Fortran compiler and options
# ----------------------------

  CF            = mpif90
  FC            = $(CF)

#--- Normal mode options
  PROF= #-pg
  OMP = -openmp

  FFLAGS_F90    = -DGFS 
  #FFLAGS_F90    = -DGFS -DMPI3 # use this if MPI-3 is available (saves memory for LETKF)
  EXE_FILE = global_enkf
  #FFLAGS_F90    = -DWRF
  #EXE_FILE = wrf_enkf
  #FFLAGS_F90    = -DNMMB 
  #EXE_FILE = nmmb_enkf

  FFLAGS_COM_N  = -I ./ -I ../ -I $(INCsfcio) -I $(INCsigio) -I $(INCnetcdf) -I $(INCnemsio)\
		-O3 $(ARCHINTELOPT) -warn all -implicitnone -traceback -fp-model strict -convert big_endian $(OMP)

  FFLAGS_COM_N_NOSWAP  = -I ./ -I ../ -I $(INCsfcio) -I $(INCsigio) -I $(INCnetcdf) -I $(INCnemsio)\
		-O3 $(ARCHINTELOPT) -warn all -implicitnone -traceback -fp-model strict -convert big_endian $(OMP)

  FFLAGS_N  = $(FFLAGS_F90) $(FFLAGS_COM_N) $(PROF)
  FFLAGS_NOSWAP_N  = $(FFLAGS_F90) $(FFLAGS_COM_N_NOSWAP) $(PROF)
  FFLAGS_f  = $(FFLAGS_COM_N) $(PROF)
  FFLAGS    = $(FFLAGS_N) $(PROF)


#--- Debug mode options
  FFLAGS_COM_D  =  -I ./  -I ../ -I $(INCsfcio) -I $(INCsigio) -I $(INCnetcdf) -I $(INCnemsio)\
		-O0 -warn all -implicitnone -traceback -g -debug full -fp-model strict -convert big_endian
  FFLAGS_COM_NOSWAP_D  =  -I ./ -I ../ -I $(INCsfcio) -I $(INCsigio) -I $(INCnetcdf) -I $(INCnemsio)\
		-O0 -warn all -implicitnone -traceback -g -debug full -fp-model strict -convert big_endian

  FFLAGS_D  = $(FFLAGS_F90) $(FFLAGS_COM_D)
  FFLAGS_NOSWAP_D = $(FFLAGS_F90) $(FFLAGS_COM_NOSWAP_D)



# ----------------------
# C Compiler and options
# ----------------------

  CC            = gcc

#--- Normal mode options

  CFLAGS_N      = -DLINUX -Dfunder -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -O3 $(ARCHINTELOPT) $(PROF)

#--- Debug mode options

  CFLAGS_D      = -DLINUX -Dfunder -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -g


# ------------------
# Linker and options
# ------------------

  LD            = $(CF) 

#--- Normal mode options
  LIBS_N        = -L$(CORELIB) -lsp_d -lsigio_4 -lsfcio_4 -lnemsio -lbacio_4 -lw3nco_d $(GSILIBS)\
     	  $(LIBnetcdf)
  # use this one if linking shtns lib intead of splib for spectral transforms.
  #LIBS_N        = -L$(CORELIB) -lsp_d -lsigio_4 -lsfcio_4 -lnemsio -lbacio_4 -lw3nco_d\
  # 		  $(GSILIBS) $(LIBnetcdf) -L$(SHTNSLIB) -lshtns -lfftw3

  LDFLAGS_N     = -mkl=sequential $(OMP)

  LDFLAGS       = $(LDFLAGS_N)

#--- Debug mode options

  LIBS_D        = $(LIBS_N)

  LDFLAGS_D     =

#--- Empty out mpi library definition: embedded in compiler

  LIBmpi	=
